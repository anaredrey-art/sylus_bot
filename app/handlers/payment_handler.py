from aiogram import Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from services.cryptobot_service import create_invoice, check_invoice_status
from keyboards.payment_kb import get_payment_keyboard
from database import get_db
from models.user import User, Subscription

router = Router()

@router.message(Command("premium"))
@router.message(F.text == "üíé –ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞")
async def handle_premium_request(message: Message):
    db = next(get_db())
    user = db.query(User).filter(User.telegram_id == message.from_user.id).first()
    
    if not user or user.message_count < 15:
        await message.answer(
            "‚ùå –ü—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ 15 —Å–æ–æ–±—â–µ–Ω–∏–π.\n"
            f"üìä –í–∞—à —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç—á–∏–∫: {user.message_count if user else 0}/15 —Å–æ–æ–±—â–µ–Ω–∏–π"
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–≤–æ–π—Å –≤ CryptoBot
    invoice = await create_invoice(
        amount=2.00,  # –ë–∞–∑–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ $2
        currency="USD",
        user_id=user.telegram_id
    )
    
    if invoice and "result" in invoice:
        invoice_url = invoice["result"]["pay_url"]
        await message.answer(
            "üíé –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–¥–ø–∏—Å–∫–∏:\n\n"
            "‚Ä¢ Basic ($2) - –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≥–æ–ª–æ—Å–∞–º\n"
            "‚Ä¢ Premium ($5) - —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –≥–æ–ª–æ—Å–∞ + –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏\n\n"
            "üëá –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã",
            reply_markup=get_payment_keyboard(invoice_url)
        )

@router.callback_query(F.data == "check_payment")
async def handle_payment_check(callback: CallbackQuery):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã
    db = next(get_db())
    user = db.query(User).filter(User.telegram_id == callback.from_user.id).first()
    
    if user and await check_invoice_status(user.telegram_id):
        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        subscription = Subscription(
            user_id=user.id,
            plan_type="basic_2",
            is_active=True
        )
        db.add(subscription)
        db.commit()
        
        await callback.message.edit_text(
            "‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –ü—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.\n\n"
            "‚ú® –¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã:\n"
            "‚Ä¢ –í—Å–µ –≥–æ–ª–æ—Å–∞ Silero TTS\n"
            "‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤\n"
            "‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"
        )
    else:
        await callback.answer("‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –µ—â–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞", show_alert=True)